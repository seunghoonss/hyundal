function dfs(matrix, x, y) {
    if (x < 0 || y < 0 || x >= matrix.length || y >= matrix[0].length || matrix[x][y] === 0) {
        return 0;
    }

    matrix[x][y] = 0;  // 현재 위치를 방문 처리
    let size = 1;  // 현재 셀의 크기

    // 인접한 셀 방문
    size += dfs(matrix, x + 1, y);
    size += dfs(matrix, x - 1, y);
    size += dfs(matrix, x, y + 1);
    size += dfs(matrix, x, y - 1);

    return size;
}

function findRegions(matrix) {
    const regionSizes = [];

    for (let i = 0; i < matrix.length; i++) {
        for (let j = 0; j < matrix[0].length; j++) {
            if (matrix[i][j] === 1) {
                regionSizes.push(dfs(matrix, i, j));
            }
        }
    }

    return regionSizes.sort((a, b) => a - b);
}

// 예시 입력을 코드에 맞게 변환
const inputMatrix1 = [
    [0, 1, 1, 0, 0, 0],
    [0, 1, 1, 0, 1, 1],
    [0, 0, 0, 0, 1, 1],
    [0, 0, 0, 0, 1, 1],
    [1, 1, 0, 0, 1, 0],
    [1, 1, 1, 0, 0, 0]
];

const inputMatrix2 = [[0]];
const inputMatrix3 = [[1]];

// 결과 출력
function printResult(matrix) {
    const regions = findRegions(matrix);
    console.log(regions.length);
    if (regions.length > 0) {
        console.log(regions.join(' '));
    }
}

console.log("Example 1:");
printResult(inputMatrix1);

console.log("\nExample 2:");
printResult(inputMatrix2);

console.log("\nExample 3:");
printResult(inputMatrix3);
